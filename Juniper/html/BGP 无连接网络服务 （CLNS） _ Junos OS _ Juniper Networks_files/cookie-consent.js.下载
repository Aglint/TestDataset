

var MY_DOMAIN = "juniper.net";
var REQUIRE_USER_EXPRESSED_PERMISSION = true;
var _STATE = {};


function runOnce() {

	if (!_STATE.hasRunOnce && window.PrivacyManagerAPI) {
		console.log("doing run once");


		window.addEventListener("message", function (e) {
			try {
				var json = JSON.parse(e.data);
				json.PrivacyManagerAPI && handleAPIResponse(json.PrivacyManagerAPI);
			} catch (e) {
				e.name != 'SyntaxError' && console.log(e);
			}
		}, false);
		var apiObject = {
			PrivacyManagerAPI: {
				self: MY_DOMAIN,
				action: "getConsent",
				timestamp: new Date().getTime(),
				type: "functional"
			}
		};
		window.top.postMessage(JSON.stringify(apiObject), "*");
		apiObject = {
			PrivacyManagerAPI: {
				self: MY_DOMAIN,
				action: "getConsent",
				timestamp: new Date().getTime(),
				type: "advertising"
			}
		};
		window.top.postMessage(JSON.stringify(apiObject), "*");

		_STATE.hasRunOnce = true;
		_STATE.i && clearInterval(_STATE.i);
	}
}


function getBehavior() {
	var result = "";
	var rx = new RegExp("\\s*notice_behavior\\s*=\\s*([^;]*)").exec(document.cookie);
	if (rx && rx.length > 1) {
		result = rx[1];
	}
	return result;
}


function handleAPIResponse(response) {

	if (!response.source || response.self != MY_DOMAIN) return;
	console.log("user decision", response);

	if (!_STATE.hasLoadedRequired) {
		activateElement(document.querySelectorAll(".trustecm[trackertype=required]"));
		_STATE.hasLoadedRequired = true;
	}


	var isEU = /.*(,|)eu/i.test(getBehavior());


	if (isEU && REQUIRE_USER_EXPRESSED_PERMISSION && response.source != "asserted") return;


	var setting = null;
	if (!_STATE.hasLoadedAdvertising) {
		setting = PrivacyManagerAPI.callApi("getConsent", MY_DOMAIN, null, null, "advertising");
		if (setting.consent == "approved") {
			activateElement(document.querySelectorAll(".trustecm[trackertype=advertising]"));
			_STATE.hasLoadedAdvertising = true;
		}
		console.log(setting);
	}
	if (!_STATE.hasLoadedFunctional) {
		setting = PrivacyManagerAPI.callApi("getConsent", MY_DOMAIN, null, null, "functional");
		if (setting.consent == "approved") {
			activateElement(document.querySelectorAll(".trustecm[trackertype=functional]"));
			_STATE.hasLoadedFunctional = true;
		}
		console.log(setting);
	}


	if (!_STATE.hasLoadedAnyConsent) {
		activateElement(document.querySelectorAll(".trustecm[trackertype=any]"));
		_STATE.hasLoadedAnyConsent = true;
	}


	var vendors = document.querySelectorAll(".trustecm[trackertype=vendor]");
	for (var i = 0; i < vendors.length; i++) {
		var currentVendor = vendors[i];
		var vDomain = currentVendor.getAttribute("vsrc");
		if (vDomain && !_STATE['hasLoaded' + vDomain]) {
			setting = PrivacyManagerAPI.callApi("getConsent", MY_DOMAIN, vDomain);
			if (setting.consent == "approved") {
				activateElement(document.querySelectorAll(".trustecm[trackertype=vendor][vsrc='" + vDomain + "']"));
				_STATE['hasLoaded' + vDomain] = true;
			}
			console.log(setting);
		}
	}
}

function activateElement(list) {
	if (!(list instanceof Array || list instanceof NodeList)) throw "Illegal argument - must be an array";
	console.log("activating", list);
	for (var item, i = list.length; i-- > 0;) {
		item = list[i];
		item.class = "trustecm_done";
		switch (item.nodeName.toLowerCase()) {
			case "script":
				var z = item.getAttribute("thesrc");
				if (z) {
					var y = document.createElement("script");
					y.src = z;
					y.async = item.async;
					item.parentNode.insertBefore(y, item);
				} else eval(item.text || item.textContent || item.innerText);
		}
	}
}
_STATE.i = setInterval(runOnce, 10);

